// Возможные характеристики:
// Общие: weight, dimensions, warranty, material
// Мыши: sensor, switchType, battery, connectionType, pollingRate, mcu
// Клавиатуры: swithes, switchType, keyCount, percentFormat, connectionType
// Коврики: surfaceType, size, thickness, baseMaterial
// Наушники: driverSize, frequencyRange, microphone, connectionType, impedance
// Мониторы: screenSize, martrixType, resolution, refreshRate, responseTime
// Игровые кресла: maxWeight, upholsteryMaterial, armrestAdjustment, backrestTilt

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id Int @id @default(autoincrement())

  firstName String
  email     String    @unique
  password  String
  role      UserRole  @default(USER)
  verified  DateTime?

  cart   Cart?
  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  link     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  name            String
  description     String
  brand           String
  characteristics Json

  variants ProductVariant[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariant {
  id Int @id @default(autoincrement())

  color    String
  price    Int
  stock    Int
  imageUrl String

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItems CartItem[]
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  totalAmount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
  productVariantId Int

  quantity Int @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalAmount Int
  status      OrderStatus
  paymentId   String?

  items Json

  fullName String
  email    String
  phone    String
  address  String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}
